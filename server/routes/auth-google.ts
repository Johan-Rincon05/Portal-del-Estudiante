import express from 'express';
import { generateAuthUrl, getTokensFromCode, isAuthenticated, getFolderInfo } from '../google-drive-oauth';

const router = express.Router();

// Ruta para iniciar el proceso de autenticaci√≥n
router.get('/google/auth', (req, res) => {
    try {
        const authUrl = generateAuthUrl();
        console.log('üîó URL de autorizaci√≥n generada:', authUrl);
        res.json({ 
            success: true, 
            authUrl,
            message: 'Ve a esta URL para autorizar el acceso a Google Drive'
        });
    } catch (error) {
        console.error('Error al generar URL de autorizaci√≥n:', error);
        res.status(500).json({ 
            success: false, 
            error: 'Error al generar URL de autorizaci√≥n' 
        });
    }
});

// Ruta de callback despu√©s de la autorizaci√≥n
router.get('/google/callback', async (req, res) => {
    try {
        const { code } = req.query;
        
        if (!code || typeof code !== 'string') {
            return res.status(400).json({ 
                success: false, 
                error: 'C√≥digo de autorizaci√≥n no v√°lido' 
            });
        }

        console.log('üîÑ Intercambiando c√≥digo por tokens...');
        const tokens = await getTokensFromCode(code);
        
        console.log('‚úÖ Tokens obtenidos correctamente');
        
        // Redirigir a una p√°gina de √©xito o devolver respuesta JSON
        res.json({ 
            success: true, 
            message: 'Autenticaci√≥n completada exitosamente',
            authenticated: true
        });
        
    } catch (error) {
        console.error('Error en callback de Google:', error);
        res.status(500).json({ 
            success: false, 
            error: 'Error al completar la autenticaci√≥n' 
        });
    }
});

// Ruta para verificar el estado de autenticaci√≥n
router.get('/google/status', async (req, res) => {
    try {
        const authenticated = isAuthenticated();
        
        if (authenticated) {
            // Intentar obtener informaci√≥n de la carpeta para verificar que todo funciona
            try {
                const folderInfo = await getFolderInfo();
                res.json({
                    success: true,
                    authenticated: true,
                    folderInfo,
                    message: 'Autenticaci√≥n v√°lida y carpeta accesible'
                });
            } catch (folderError) {
                res.json({
                    success: true,
                    authenticated: true,
                    folderError: folderError.message,
                    message: 'Autenticado pero error al acceder a la carpeta'
                });
            }
        } else {
            res.json({
                success: false,
                authenticated: false,
                message: 'No autenticado. Necesitas autorizar el acceso a Google Drive'
            });
        }
        
    } catch (error) {
        console.error('Error al verificar estado de autenticaci√≥n:', error);
        res.status(500).json({ 
            success: false, 
            error: 'Error al verificar estado de autenticaci√≥n' 
        });
    }
});

export default router; 