const fs = require('fs');
const path = require('path');

// Funci√≥n para verificar si las variables de entorno OAuth est√°n configuradas
function checkOAuthConfig() {
    const requiredVars = [
        'GOOGLE_CLIENT_ID',
        'GOOGLE_CLIENT_SECRET',
        'GOOGLE_DRIVE_FOLDER_ID'
    ];
    
    const missingVars = [];
    
    requiredVars.forEach(varName => {
        if (!process.env[varName]) {
            missingVars.push(varName);
        }
    });
    
    return {
        isComplete: missingVars.length === 0,
        missingVars
    };
}

// Funci√≥n para mostrar instrucciones de configuraci√≥n
function showSetupInstructions() {
    console.log('üîß Configuraci√≥n de OAuth para Google Drive');
    console.log('==========================================\n');
    
    console.log('üìã Pasos para configurar OAuth:');
    console.log('');
    console.log('1. üåê Ve a Google Cloud Console:');
    console.log('   https://console.cloud.google.com/');
    console.log('');
    console.log('2. üìÅ Selecciona tu proyecto o crea uno nuevo');
    console.log('');
    console.log('3. üîë Ve a "APIs y servicios" > "Credenciales"');
    console.log('');
    console.log('4. ‚ûï Haz clic en "Crear credenciales" > "ID de cliente de OAuth 2.0"');
    console.log('');
    console.log('5. üìù Configura la aplicaci√≥n:');
    console.log('   - Tipo: Aplicaci√≥n de escritorio');
    console.log('   - Nombre: Portal del Estudiante');
    console.log('');
    console.log('6. üìã Copia las credenciales generadas:');
    console.log('   - ID de cliente');
    console.log('   - Secreto del cliente');
    console.log('');
    console.log('7. üîß Agrega estas variables a tu archivo .env:');
    console.log('');
    console.log('   GOOGLE_CLIENT_ID=tu_id_de_cliente');
    console.log('   GOOGLE_CLIENT_SECRET=tu_secreto_de_cliente');
    console.log('   GOOGLE_DRIVE_FOLDER_ID=1eNzgB8aXSraFEPCTWd9Dp1HmESe0ob3G');
    console.log('');
    console.log('8. üöÄ Reinicia el servidor');
    console.log('');
    console.log('9. üîó Ve a: http://localhost:3000/api/auth/google/auth');
    console.log('   Para autorizar el acceso a Google Drive');
    console.log('');
}

// Funci√≥n para verificar el estado actual
function checkCurrentStatus() {
    const config = checkOAuthConfig();
    
    if (config.isComplete) {
        console.log('‚úÖ Todas las variables de entorno est√°n configuradas');
        console.log('');
        console.log('üîç Para verificar la autenticaci√≥n:');
        console.log('   GET http://localhost:3000/api/auth/google/status');
        console.log('');
        console.log('üîó Para iniciar la autenticaci√≥n:');
        console.log('   GET http://localhost:3000/api/auth/google/auth');
        console.log('');
    } else {
        console.log('‚ùå Faltan variables de entorno:');
        config.missingVars.forEach(varName => {
            console.log(`   - ${varName}`);
        });
        console.log('');
        showSetupInstructions();
    }
}

// Funci√≥n para actualizar el archivo .env
function updateEnvFile() {
    const envPath = path.join(__dirname, '..', '.env');
    
    console.log('üìù Actualizando archivo .env...');
    
    try {
        let envContent = '';
        
        if (fs.existsSync(envPath)) {
            envContent = fs.readFileSync(envPath, 'utf8');
        }
        
        // Variables OAuth que necesitamos agregar
        const oauthVars = {
            'GOOGLE_CLIENT_ID': 'tu_id_de_cliente_aqui',
            'GOOGLE_CLIENT_SECRET': 'tu_secreto_de_cliente_aqui',
            'GOOGLE_DRIVE_FOLDER_ID': '1eNzgB8aXSraFEPCTWd9Dp1HmESe0ob3G'
        };
        
        let updated = false;
        
        Object.entries(oauthVars).forEach(([key, defaultValue]) => {
            const regex = new RegExp(`^${key}=.*$`, 'm');
            
            if (regex.test(envContent)) {
                console.log(`   ‚úÖ ${key} ya existe`);
            } else {
                envContent += `\n${key}=${defaultValue}`;
                console.log(`   ‚ûï ${key} agregado`);
                updated = true;
            }
        });
        
        if (updated) {
            fs.writeFileSync(envPath, envContent);
            console.log('');
            console.log('‚úÖ Archivo .env actualizado');
            console.log('üí° Edita el archivo .env y reemplaza los valores por defecto');
        } else {
            console.log('');
            console.log('‚ÑπÔ∏è  Todas las variables ya est√°n en el archivo .env');
        }
        
    } catch (error) {
        console.error('‚ùå Error al actualizar .env:', error.message);
    }
}

// Funci√≥n principal
function main() {
    const args = process.argv.slice(2);
    const command = args[0];
    
    console.log('üöÄ Configurador de OAuth para Google Drive\n');
    
    switch (command) {
        case 'check':
            checkCurrentStatus();
            break;
            
        case 'setup':
            updateEnvFile();
            console.log('');
            showSetupInstructions();
            break;
            
        case 'instructions':
            showSetupInstructions();
            break;
            
        default:
            console.log('üìù Uso: node setup-oauth.js <comando>');
            console.log('');
            console.log('Comandos disponibles:');
            console.log('  check        - Verificar configuraci√≥n actual');
            console.log('  setup        - Configurar archivo .env');
            console.log('  instructions - Mostrar instrucciones de configuraci√≥n');
            console.log('');
            console.log('Ejemplo:');
            console.log('  node setup-oauth.js check');
            break;
    }
}

// Ejecutar si se llama directamente
if (require.main === module) {
    main();
}

module.exports = { checkOAuthConfig, showSetupInstructions, updateEnvFile }; 